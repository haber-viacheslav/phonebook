{"version":3,"file":"static/js/147.b4e8ff3b.chunk.js","mappings":"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","sources":["components/helpers/yupValidation.js","components/RegForm/RegForm.jsx","pages/Register.jsx"],"sourcesContent":["import { string, object, ref } from 'yup';\nimport 'yup-phone';\n\nexport const contactYupSchema = object().shape({\n  name: string().trim().strict().required(),\n  number: string().phone('UA').required(),\n});\n\nexport const yupRegisterValidation = object().shape({\n  name: string().trim().strict().required('Required !'),\n  email: string().email('Enter a Vaid Email').required('Email is Required'),\n  password: string()\n    .required('Enter Your Password')\n    .min(8, 'Password Should be minimum 8 character')\n    .max(50, 'Too long'),\n  confirmPassword: string()\n    .oneOf([ref('password')], 'Password does not matched')\n    .required('Confirm Password is Required'),\n});\n\nexport const yupLoginValidation = object().shape({\n  email: string().email('Enter a Vaid Email').required('Email is Required'),\n  password: string()\n    .required('Enter Your Password')\n    .min(8, 'Password Should be minimum 8 character')\n    .max(50, 'Too long'),\n});\n","import { Box, Button, Paper, TextField, Grid, Typography } from '@mui/material';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { yupRegisterValidation } from 'components/helpers/yupValidation';\nimport { useDispatch } from 'react-redux';\nimport { userSignup } from 'redux/auth/authService';\n\nexport const RegForm = () => {\n  const initialValue = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n  const dispatch = useDispatch();\n  const handleSubmit = (values, props) => {\n    dispatch(\n      userSignup({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    props.resetForm();\n  };\n\n  return (\n    <Grid container sx={{ justifyContent: 'center', maxWidth: '500px' }}>\n      <Paper sx={{ boxShadow: '2px 2px 3px #adadad' }}>\n        <Box p={4}>\n          <Typography variant=\"h3\">Registration</Typography>\n          <Formik\n            initialValues={initialValue}\n            validationSchema={yupRegisterValidation}\n            onSubmit={handleSubmit}\n          >\n            {props => {\n              const { name } = props.values;\n              return (\n                <Form>\n                  {/* Name */}\n                  <TextField\n                    fullWidth\n                    label=\"Name\"\n                    name=\"name\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    value={name}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                    helperText={<ErrorMessage name=\"name\" />}\n                    error={props.errors.name && props.touched.name}\n                    required\n                    size=\"small\"\n                  />\n                  {/* Email */}\n                  <Field\n                    fullWidth\n                    size=\"small\"\n                    as={TextField}\n                    label=\"Email\"\n                    type=\"Email\"\n                    name=\"email\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    helperText={<ErrorMessage name=\"email\" />}\n                    error={props.errors.email && props.touched.email}\n                  />\n                  {/* Password */}\n                  <Field\n                    fullWidth\n                    size=\"small\"\n                    as={TextField}\n                    label=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    helperText={<ErrorMessage name=\"password\" />}\n                    error={props.errors.password && props.touched.password}\n                  />\n                  {/* Confirm Password */}\n                  <Field\n                    fullWidth\n                    size=\"small\"\n                    as={TextField}\n                    label=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    helperText={<ErrorMessage name=\"confirmPassword\" />}\n                    error={\n                      props.errors.confirmPassword &&\n                      props.touched.confirmPassword\n                    }\n                  />\n                  <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    color=\"primary\"\n                    sx={{\n                      textAlign: 'center',\n                      display: 'block',\n                      mx: 'auto',\n                    }}\n                  >\n                    Submit\n                  </Button>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Box>\n      </Paper>\n    </Grid>\n  );\n};\n","import { RegForm } from 'components/RegForm/RegForm';\nimport { Container, Paper } from '@mui/material';\nconst Register = () => {\n  return (\n    <Paper\n      sx={{\n        height: { xs: '72vh', sm: '80vh', lg: '84vh', xl: '85vh' },\n      }}\n    >\n      <Container\n        sx={{\n          py: { xs: '20px', md: '40px' },\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <RegForm />\n      </Container>\n    </Paper>\n  );\n};\nexport default Register;\n"],"names":["contactYupSchema","object","shape","name","string","trim","strict","required","number","phone","yupRegisterValidation","email","password","min","max","confirmPassword","oneOf","ref","yupLoginValidation","RegForm","dispatch","useDispatch","_jsx","Grid","container","sx","justifyContent","maxWidth","children","Paper","boxShadow","_jsxs","Box","p","Typography","variant","Formik","initialValues","validationSchema","onSubmit","values","props","userSignup","resetForm","Form","TextField","fullWidth","label","margin","value","onChange","handleChange","onBlur","handleBlur","helperText","ErrorMessage","error","errors","touched","size","Field","as","type","Button","color","textAlign","display","mx","height","xs","sm","lg","xl","Container","py","md","flexDirection","alignItems"],"sourceRoot":""}